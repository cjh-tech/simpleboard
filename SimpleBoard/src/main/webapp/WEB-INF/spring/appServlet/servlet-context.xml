<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven /> <!-- 컨트롤러를 찾아주는 태그 -->
    
    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
    <!-- 리소스를 연결해주는 태그라고 생각함  스프링에서는 이런식으로 스프링 아닌곳에서는 다름-->
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- view resolver 건드리지 말것 -->
	
	<context:component-scan base-package="com.simpleboard" />  <!-- 지우니까 경로 못찾음 -->
	<!-- 컴포넌트 스캔 @Controller, @Service, @Component, @Repository 어노테이션을 붙인 클래스들을 빈(객체)으로 등록 -->
	<!--  new 대신 자동적으로 해주는듯하다 -->
	
</beans>
